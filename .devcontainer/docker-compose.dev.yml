version: '3.8'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  web-dev:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile.dev
    ports:
      - "[::1]:5173:5173"
    # develop:
    #   watch:
    #     - path: ./package.json
    #       action: rebuild
    #     - path: ./package-lock.json
    #       action: rebuild
    #     - path: .
    #       target: /app
    #       action: sync
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer 
    # folder. Note that the path of the Dockerfile and context is relative to the *primary* 
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    # build:
    #   context: .
    #   dockerfile: .devcontainer/Dockerfile
    # image: "mcr.microsoft.com/vscode/devcontainers/javascript-node"

    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/app # Mount the project folder into the container
      - /app/node_modules # Anonymous internal volumes

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"
